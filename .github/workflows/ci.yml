name: CI
on: [push, pull_request]

jobs:
  lint-and-smoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; else pip install numpy pandas matplotlib scikit-learn; fi

      - name: Import smoke (numpy / pandas / matplotlib / sklearn)
        run: |
          python - <<'PY'
          import numpy, pandas, matplotlib, sklearn
          import matplotlib
          matplotlib.use("Agg")  # headless
          print("✅ Imports OK:", numpy.__version__, pandas.__version__, matplotlib.__version__, sklearn.__version__)
          PY

      - name: Tiny sanity check (no training)
        run: |
          python - <<'PY'
          import numpy as np
          from sklearn.metrics import confusion_matrix, classification_report
          # Fake 10-class logits -> softmax labels
          rng = np.random.default_rng(0)
          y_true = rng.integers(0, 10, size=50)
          y_pred = rng.integers(0, 10, size=50)
          cm = confusion_matrix(y_true, y_pred, labels=list(range(10)))
          print("CM shape:", cm.shape)
          print(classification_report(y_true, y_pred, digits=3))
          assert cm.shape == (10, 10)
          print("✅ Sanity complete")
          PY

      - name: Check artifacts if present (non-blocking)
        run: |
          test -f reports/metrics.json       && echo "Found reports/metrics.json"       || echo "ℹ️ reports/metrics.json not committed (ok)"
          test -f reports/confusion_matrix.png && echo "Found reports/confusion_matrix.png" || echo "ℹ️ reports/confusion_matrix.png not committed (ok)"
          test -f artifacts/mlp_weights_biases_1hidden.npz && echo "Found saved weights" || echo "ℹ️ weights artifact not committed (ok)"
